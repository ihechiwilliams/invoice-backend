// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package enums

import (
	"errors"
	"fmt"
)

const (
	// InvoiceStatusPENDINGPAYMENT is a InvoiceStatus of type PENDING_PAYMENT.
	InvoiceStatusPENDINGPAYMENT InvoiceStatus = "PENDING_PAYMENT"
	// InvoiceStatusDRAFT is a InvoiceStatus of type DRAFT.
	InvoiceStatusDRAFT InvoiceStatus = "DRAFT"
	// InvoiceStatusOVERDUE is a InvoiceStatus of type OVERDUE.
	InvoiceStatusOVERDUE InvoiceStatus = "OVERDUE"
	// InvoiceStatusPAID is a InvoiceStatus of type PAID.
	InvoiceStatusPAID InvoiceStatus = "PAID"
)

var ErrInvalidInvoiceStatus = errors.New("not a valid InvoiceStatus")

// String implements the Stringer interface.
func (x InvoiceStatus) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x InvoiceStatus) IsValid() bool {
	_, err := ParseInvoiceStatus(string(x))
	return err == nil
}

var _InvoiceStatusValue = map[string]InvoiceStatus{
	"PENDING_PAYMENT": InvoiceStatusPENDINGPAYMENT,
	"DRAFT":           InvoiceStatusDRAFT,
	"OVERDUE":         InvoiceStatusOVERDUE,
	"PAID":            InvoiceStatusPAID,
}

// ParseInvoiceStatus attempts to convert a string to a InvoiceStatus.
func ParseInvoiceStatus(name string) (InvoiceStatus, error) {
	if x, ok := _InvoiceStatusValue[name]; ok {
		return x, nil
	}
	return InvoiceStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidInvoiceStatus)
}
